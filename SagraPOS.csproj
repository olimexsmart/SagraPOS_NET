<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <ImplicitUsings>enable</ImplicitUsings>
    <PublishSingleFile>true</PublishSingleFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="ESCPOS_NET" Version="3.0.0" />
    <PackageReference Include="figgle" Version="0.5.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.4">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="7.0.4" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>
  
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Message Importance="high" Text="Running npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install --legacy-peer-deps --silent" />
    <Message Importance="high" Text="Running Angular production build" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <!-- <Target Name="SuperClean" BeforeTargets="Before">
    <Message Importance="high" Text="Starting super clean" />
    <Exec Command="rm -f SagraPOS-$(ProcessorArchitecture).zip"/>
    <Exec Command="rm -rf bin"/>
  </Target>

  
  <Target Name="OutputZIP" AfterTargets="PublishRunWebPack" Condition="'$(ProcessorArchitecture)' == 'arm64'">
    <Message Importance="high" Text="Starting zipping solution" />
    <Exec Command="rm -f SagraPOS-$(ProcessorArchitecture).zip"/>
    <Exec Command="zip -q -r -1 SagraPOS-$(ProcessorArchitecture) $(OutDir)"/>
    <Message Importance="high" Text="Zipping completed" />
  </Target>


  <Target Name="CopyToRPi" AfterTargets="OutputZIP" Condition="'$(ProcessorArchitecture)' == 'arm64'">
    <Message Importance="high" Text="Starting copy of zip to deply RPi" />
    <Exec Command="scp SagraPOS-$(ProcessorArchitecture).zip olli@192.168.1.5:/home/olli/"/>
    <Message Importance="high" Text="Transfer complete" />
  </Target> -->

</Project>
